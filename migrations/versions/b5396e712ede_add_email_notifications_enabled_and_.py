"""Add email_notifications_enabled and dark_mode_enabled to User

Revision ID: b5396e712ede
Revises: 62d0276d4021
Create Date: 2025-04-06 20:05:01.047295

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b5396e712ede'
down_revision = '62d0276d4021'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Use batch mode for broader compatibility (especially SQLite), works fine for PostgreSQL too.
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Add the email_notifications_enabled column
        batch_op.add_column(
            sa.Column(
                'email_notifications_enabled',
                sa.Boolean(),
                nullable=False,
                # --- Ensure server_default is set for existing rows ---
                server_default=sa.text('true') # Default for existing rows is TRUE
            )
        )
        # Add the dark_mode_enabled column
        batch_op.add_column(
            sa.Column(
                'dark_mode_enabled',
                sa.Boolean(),
                nullable=False,
                # --- Ensure server_default is set for existing rows ---
                server_default=sa.text('false') # Default for existing rows is FALSE
            )
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Use batch mode for consistency
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Drop the columns in reverse order of addition (optional but good practice)
        batch_op.drop_column('dark_mode_enabled')
        batch_op.drop_column('email_notifications_enabled')

    # ### end Alembic commands ###
